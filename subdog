#!/usr/bin/env bash

# COLORS
BLUE='\033[0;34m'
BBLUE='\033[1;34m'
BYELLOW='\033[1;33m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
RED='\033[0;31m'
RESET='\033[0m'
VERSION="SubDog v1.1"

banner(){
    echo -e "${GREEN}
\t\t ___  __  __  ____  ____  _____  ___ 
\t\t/ __)(  )(  )(  _ \(  _ \(  _  )/ __)
\t\t\__ \ )(__)(  ) _ < )(_) ))(_)(( (_-.
\t\t(___/(______)(____/(____/(_____)\___/
\t\t${VERSION}                    coded by ${YELLOW}@rix4uni${RED} in INDIA${RESET}"
}

showhelp(){
    banner
    echo -e "${GREEN}TARGET OPTIONS${RESET}"
    echo -e "   -d, --domain            Single Target domain (domain.com)"
    echo -e "   -l, --list              Multiple Target domain (wildcards.txt)"
    echo -e "   --org                   Get ASN using orgname (dell)"
    echo -e "   --asn                   Get CIDR Range using ASN (AS59915)"
    echo -e "   --cidr_domain           Get CIDR Range using domain (domain.com)"
    echo -e "   --reverse_domain        Get Reverse Whois Subdomain using domain (domain.com)"
    echo -e "   -h, --help              Help - Show this help"
    echo -e ""
    echo -e "${GREEN}USAGE EXAMPLES${RESET}"
    echo -e "   ${BYELLOW}subdog -d example.com${RESET}"
    echo -e "   ${BYELLOW}subdog -l wildcards.txt${RESET}"
    echo -e ""
}

SUBSCAN(){
    company_name=${domain%%.*}
    copyright=$3
    curl -s "https://rapiddns.io/subdomain/$domain?full=1#result" | grep "$company_name" | sed 's/<\/\?[^>]\+>//g' | sed '/<a$/d' | sed '1,3d' | sed '/\.$/d'
    curl -s "https://api.threatminer.org/v2/domain.php?q=$domain&rt=5" | jq -r '.results[]'
    curl -s "https://riddler.io/search/exportcsv?q=pld:$domain" | cut -d "," -f6 | sed '1,2d'
    curl -s "https://otx.alienvault.com/api/v1/indicators/domain/$domain/passive_dns" | jq -r '.passive_dns[].hostname' | grep -i "$company_name"
    echo "$domain" | go run ~/bin/SubDog/archvie.go | grep "$domain" | unfurl -u domains
    curl -s "https://api.hackertarget.com/hostsearch/?q=$domain" | cut -f1 -d","
    echo "$domain"| go run ~/bin/SubDog/crtsh.go | grep -i "$company_name" | unfurl -u domains
    curl -s "https://jldc.me/anubis/subdomains/$domain" | jq -r '.[]'
    curl -s "https://urlscan.io/api/v1/search/?q=domain:$domain" | jq -r '.results[] | {page:.page.domain, task:.task.domain}[]' | grep "$company_name"
    echo "$domain" | python3 ~/bin/SubDog/c99.py
    curl -s "https://www.virustotal.com/ui/domains/$domain/subdomains?limit=1000&relationships=resolutions" -H 'X-Tool: vt-ui-main' -H 'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36' -H 'Accept-Ianguage: en-US,en;q=0.9,es;q=0.8'   -H 'X-VT-Anti-Abuse-Header: MTY1NjA5Nzk1NjAtWkc5dWRDQmlaU0JsZG1scy0xNjgzNDI2MDY4Ljc2MQ==' | jq -r '.data[].id'
    curl -s 'https://dnsdumpster.com/' -H 'cookie: csrftoken=vZGRO1YfdzdviMYTYZqLrw0PxsV5mlAnVGFadIqkjIAhiyNgi5w70hIj7uuzdmXx' -H 'referer: https://dnsdumpster.com/' --data-raw "csrfmiddlewaretoken=ktAzNxgx3iKpHNKrwqrG4aqvxhyA2Kj5KazSceIC9r7bHzzOQwx2DV8Z7j74TLGf&targetip=$domain&user=free" | grep '<tr><td class="col-md-4">' | sed 's/<tr><td class="col-md-4">//g;s/<br>//g;s/^[[:space:]]*//;s/[[:space:]]*$//' | grep "$domain"
    curl -s "https://api.certspotter.com/v1/issuances?domain=$domain&include_subdomains=true&expand=dns_names" | jq -r '.[].dns_names[]'
    curl -s 'https://seckrd.com/subdomain-finder' --data-raw "domain=$domain&submit=" | grep "<li><a href=" | grep -oP "(?<=\>).*?(?=\<)"
    curl -s "http://api.subdomain.center/?domain=$domain" | jq -r '.[]' | egrep -v "Rate limit exceeded: 3 per 1 minute"
}


GETASN(){
    curl -s "https://bgp.he.net/search?search%5Bsearch%5D=$org&commit=Search" -H 'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36' | grep -oP '(?<=\>)(AS\d+)(?=</a>)'
}


GETCIDR(){
    whois -h whois.radb.net -- "-i origin $asn" | grep -Eo "([0-9.]+){4}/[0-9]+" | uniq
}


GETCIDR_DOMAIN(){
    curl -s "https://ipinfo.io/widget/demo/$cidr_domain?dataset=ranges" -H 'referer: https://ipinfo.io/products/ranges-api' | jq -r '.ranges[]'
}


GET_REVERSE_DOMAIN(){
    curl -s "$(curl -s "https://www.whoxy.com/$reverse_domain" | grep "View all Related Domain Names" | cut -d'"' -f2 | sed 's|^|https://www.whoxy.com/|')" | grep '<hr><table class="grid first_col_center"><tr><th>Num</th><th' | grep -Eo '[a-zA-Z0-9]+([.-][a-zA-Z0-9]+)*\.[a-zA-Z]{2,}' | sort -u
    whois $reverse_domain | grep "Registrant Email:\|Admin Email:\|Tech Email:" | awk '{print $3}' | sort -u | while read -r email; do curl -s "https://viewdns.info/reversewhois/?q=$email" -H 'user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36' | grep -oP '(?<=<td>)[a-z0-9.-]+(?=</td><td>[0-9-]+</td><td>)';done
}


while [ -n "$1" ]; do
    case $1 in
        -d|--domain)
            domain=$2
            SUBSCAN | tr -d ' \t' | tr ',' '\n' | awk '{print tolower($0)}' | grep -Eo '[a-zA-Z0-9]+([.-][a-zA-Z0-9]+)*\.[a-zA-Z]{2,}'
            exit 0 ;;
            
        -l|--list)
            filename=$2
            while read -r line; do
                domain=$line
                SUBSCAN | tr -d ' \t' | tr ',' '\n' | awk '{print tolower($0)}' | grep -Eo '[a-zA-Z0-9]+([.-][a-zA-Z0-9]+)*\.[a-zA-Z]{2,}'
            done < "$filename"
            exit 0 ;;

        --org)
            org=$2
            GETASN
            exit 0 ;;

        --asn)
            asn=$2
            GETCIDR
            exit 0 ;;

        --cidr_domain)
            cidr_domain=$2
            GETCIDR_DOMAIN
            exit 0 ;;

        --reverse_domain)
            reverse_domain=$2
            GET_REVERSE_DOMAIN
            exit 0 ;;
            
        -v|--version)
            echo "$VERSION"
            exit 0 ;;
            
        -h|--help)
            showhelp
            exit 1 ;;
    esac
done
